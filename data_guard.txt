#Basic datragourd setup
#Check db in archive log
See http://oracle-base.com/articles/11g/data-guard-setup-11gr2.php#standby_server_setup_dup
SELECT log_mode FROM v$database;

##If it is noarchivelog mode, switch is to archivelog mode.
SHUTDOWN IMMEDIATE;
STARTUP MOUNT;
ALTER DATABASE ARCHIVELOG;
ALTER DATABASE OPEN;
ALTER DATABASE FORCE LOGGING;

 alter system set db_unique_name=P007_DR scope=spfile;


ALTER SYSTEM SET LOG_ARCHIVE_CONFIG='DG_CONFIG=(P007,P007_DR)';

ALTER SYSTEM SET LOG_ARCHIVE_DEST_2='SERVICE=P007_VNCL1BASX01 NOAFFIRM ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=P007_DR';
ALTER SYSTEM SET LOG_ARCHIVE_DEST_2='SERVICE=P007_DR NOAFFIRM ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=P007_DR';
ALTER SYSTEM SET LOG_ARCHIVE_DEST_STATE_2=ENABLE;

ALTER SYSTEM SET LOG_ARCHIVE_FORMAT='%t_%s_%r.arc' SCOPE=SPFILE;
ALTER SYSTEM SET LOG_ARCHIVE_MAX_PROCESSES=30;
ALTER SYSTEM SET REMOTE_LOGIN_PASSWORDFILE=EXCLUSIVE SCOPE=SPFILE;

ALTER SYSTEM SET FAL_SERVER=P007_DR;
ALTER SYSTEM SET DB_FILE_NAME_CONVERT='P007_DR','P007' SCOPE=SPFILE;
ALTER SYSTEM SET LOG_FILE_NAME_CONVERT='P007_DR','P007'  SCOPE=SPFILE;
ALTER SYSTEM SET STANDBY_FILE_MANAGEMENT=AUTO;

##tnsnames.ora setup
# Add each host to standby and primary so that can connect to each other

W007 =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = vncl1basx01)(PORT = 1429))
    (ADDRESS = (PROTOCOL = TCP)(HOST = vncl1basx01)(PORT = 1529))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = W007)
    )
  )

  
 DR_VNCL1BASX01 =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = vncl1basx01)(PORT = 1429))
    )
  )

#take backup of Primary using rman  
rman target rman/rman
RMAN> BACKUP DATABASE PLUS ARCHIVELOG;  

#Create Standby Controlfile and PFILE on DR Db
ALTER DATABASE CREATE STANDBY CONTROLFILE AS '/tmp/P007_DR.ctl';
CREATE PFILE='/tmp/initP007_DR.ora' FROM SPFILE;

#Create Standby Redo Logs on Primary Server
ALTER DATABASE ADD STANDBY LOGFILE ('/orap007/apps_st/data01/standby_redo01.log') SIZE 100M;
ALTER DATABASE ADD STANDBY LOGFILE ('/orap007/apps_st/data02/standby_redo02.log') SIZE 100M;
ALTER DATABASE ADD STANDBY LOGFILE ('/orap007/apps_st/data01/standby_redo03.log') SIZE 100M;
ALTER DATABASE ADD STANDBY LOGFILE ('/orap007/apps_st/data02/standby_redo04.log') SIZE 100M;

STARTUP NOMOUNT PFILE='/tmp/initP007_DR.ora';

/oraw007/db/11.2.0/network/admin/listener_ifile.ora

#make both db tnsnames has entry for each other so they can connect back and forth

e.g
# tnsnames.ora Network Configuration File: /oraw007/db/11.2.0/network/admin/tnsnames.ora
# Generated by Oracle configuration tools.

LISTENER_W007 =
  (ADDRESS = (PROTOCOL = TCP)(HOST = vedi1basx01)(PORT = 1529))


W007 =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = vedi1basx01)(PORT = 1529))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = W007)
    )
  )

DR_VNCL1BASX01 =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = vncl1basx01)(PORT = 1429))
      (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = W007_DR)
      (UR=A)
    )
  )

##################################
rman TARGET sys/Velocity123@W007 AUXILIARY sys/Velocity123@DR_VNCL1BASX01

rman TARGET sys/Velos123@P007 AUXILIARY sys/Velos123@P007_VNCL1BASX01

DUPLICATE TARGET DATABASE
  FOR STANDBY
  FROM ACTIVE DATABASE
  DORECOVER
  SPFILE
    SET db_unique_name='W007_DR' COMMENT 'Is Standby'
    SET LOG_ARCHIVE_DEST_2='SERVICE=W007 ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=W007'
    SET FAL_SERVER='W007' COMMENT 'Is Primary'
  NOFILENAMECHECK;
  


#Start the apply process on standby server.
# Background redo apply. Control is returned to the session once the apply process is started.
alter database mount;
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT FROM SESSION;

#If you prefer, you can set a delay between the arrival of the archived redo log and it being applied on the standby server using the following commands.
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DELAY 360 DISCONNECT FROM SESSION;

ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
alter database recover managed standby database  nodelay disconnect;

ALTER DATABASE RECOVER MANAGED STANDBY DATABASE NODELAY DISCONNECT FROM SESSION;

#On the primary server, check the latest archived redo log and force a log switch.
ALTER SESSION SET nls_date_format='DD-MON-YYYY HH24:MI:SS';

SELECT sequence#, first_time, next_time, applied, dest_id
FROM   v$archived_log
ORDER BY sequence#;

ALTER SYSTEM SWITCH LOGFILE;

#Check the new archived redo log has arrived at the standby server and been applied.
ALTER SESSION SET nls_date_format='DD-MON-YYYY HH24:MI:SS';

SELECT sequence#, first_time, next_time, applied, dest_id
FROM   v$archived_log
ORDER BY sequence#;

#to help find errors on source if logs arent being applied
select DEST_ID, STATUS, DESTINATION, ERROR from V$ARCHIVE_DEST where DEST_ID <=2;

#On DR 
select * from v$dataguard_status;
select switchover_status from v$database;
select * from v$recovery_progress;

# Log status (whats being applied)
set lines 180
set pages 50
col client_process for a10
col client_pid for a10
col client_dbid for a10
col group# for a10
select * from v$managed_standby
where (process like 'MRP%' )
or ( process = 'RFS' and client_process != 'UNKNOWN' )
or ( process = 'ARCH' and status = 'CLOSING' and sequence# = (select max(sequence#) from v$managed_standby where process = 'ARCH') );

Compressed tunnel
#Create TNSnames entry for localhost on prot 3308
#   tunnel using compress
P007_VNCL1BASX01 = (DESCRIPTION=
                (ADDRESS=(PROTOCOL=tcp)(HOST=localhost)(PORT=3303))
                (CONNECT_DATA=(SID=P007))
            )

P007_vedi1basx01 = (DESCRIPTION=
                (ADDRESS=(PROTOCOL=tcp)(HOST=loghost)(PORT=3303))
                (CONNECT_DATA=(SID=P007))
            )
			


#DR
/usr/bin/ssh -C -f -N -T -L 3308:localhost:1428 orap007@10.10.160.150

#P007
/usr/bin/ssh -C -f -N -T -L 3308:localhost:1428 orap007@10.10.161.150

######## Open DB read only to check tables - Mini DR test ##############
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
shutdown immediate
startup mount
alter database open read only;


shutdown immediate
startup mount
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE NODELAY DISCONNECT;
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DELAY 360 DISCONNECT FROM SESSION;

############## Roll forward if big ARH gap using RMAN ##########################
#On Primary
select current_scn from v$database;
CURRENT_SCN
-----------
  850105956

#On DR
select current_scn from v$database;

CURRENT_SCN
-----------
  375032358

  
#on DR
alter database recover managed standby database cancel;
shutdown immediate

#On Primary
rman
run { 
allocate channel c1 type disk format '/backup/%U.rmb'; 
backup incremental from scn 375032358 database;
}

#On Primary
alter database create standby controlfile as '/backup/P007_standby.ctl';

scp *.rmb *ctl user@host

#On DR
startup nomount

SQL> show parameter control_files;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
control_files                        string      /orap007/apps_st/data03/cntrl0
                                                 1.dbf, /orap007/apps_st/data03
                                                 /cntrl02.dbf, /orap007/apps_st
                                                 /data03/cntrl03.dbf


#replace control file with on just created and scp'd over
mv /orap007/apps_st/data03/cntrl01.dbf /orap007/apps_st/data03/cntrl01.dbf_220615
mv /orap007/apps_st/data03/cntrl02.dbf /orap007/apps_st/data03/cntrl02.dbf_220615
mv /orap007/apps_st/data03/cntrl03.dbf /orap007/apps_st/data03/cntrl03.dbf_220615

cp P007_standby.ctl /orap007/apps_st/data03/cntrl01.dbf
cp P007_standby.ctl /orap007/apps_st/data03/cntrl02.dbf
cp P007_standby.ctl /orap007/apps_st/data03/cntrl03.dbf

alter database mount standby database;

rman target=/

catalog start with '/export/fmw/W007_backups';
YES
recover database;
#After some time, the recovery fails with the message:
RMAN-06054: media recovery requesting unknown archived log for thread 1 with sequence 1667 and starting SCN of 372615225

This happens because we have come to the last of the archived logs. The expected archived log with sequence# 8008 has not been generated yet.

#exit rman on DR
exit;

#start managed standby
sqldba
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE NODELAY DISCONNECT;

#On DR
select current_scn from v$database;
 
CURRENT_SCN
-----------
  372615224

#On Primary
select current_scn from v$database;

CURRENT_SCN
-----------
  372633814

############## Now they are very close to each other.

set lines 140 pages 100
col MESSAGE form a40 wrap word

alter session set nls_date_format='DD-MON-YYYY HH24:MI:SS';

select TIMESTAMP,
       DEST_ID,
       SEVERITY,
       FACILITY,
--  , ERROR_CODE
       MESSAGE
from  v$dataguard_status
order by TIMESTAMP;

prompt The gap between the promary and the detination
select * from v$archive_gap;


col dest_name form a20
select DEST_NAME, STATUS, FAILURE_COUNT, MAX_FAILURE, LOG_SEQUENCE
from v$archive_dest
/

prompt ALF process
select process,status,client_process,sequence#
from v$managed_standby;

prompt ALF differences
select ads.dest_id,
        max(sequence#) "Current Sequence",
        max(log_sequence) "Last Archived"
from    v$archived_log al,
        v$archive_dest ad,
        v$archive_dest_status ads
where   ad.dest_id=al.dest_id
and     al.dest_id=ads.dest_id
group   by ads.dest_id;

  




  